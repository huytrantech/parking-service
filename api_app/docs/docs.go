// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/external/v1/circle-location": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show the top nearest parking in circle radius of specific location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external"
                ],
                "summary": "Top nearest parking in circle radius",
                "parameters": [
                    {
                        "type": "number",
                        "description": "lat",
                        "name": "lat",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "lng",
                        "name": "lng",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "distance",
                        "name": "distance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "text_search",
                        "name": "text_search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "city",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "district",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api_model.GetCircleParkingLocationModelResponseDto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/external/v1/directions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show the direction from specific location to parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external"
                ],
                "summary": "Show the direction from specific location to parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "origin",
                        "name": "origin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api_model.GetDirectionResponseDto"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/external/v1/placeholder": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetPlaceHolder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external"
                ],
                "summary": "GetPlaceHolder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "input",
                        "name": "input",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "radius",
                        "name": "radius",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api_model.GetPlaceHolderResponseDto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/external/v1/placeholder/{place_id}/detail": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetDetailPlaceHolder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external"
                ],
                "summary": "GetDetailPlaceHolder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "place_id",
                        "name": "place_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api_model.DetailPlaceResponseDto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/external/v1/recommend": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show the recommend parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external"
                ],
                "summary": "Show the recommend parking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page_index",
                        "name": "page_index",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_limit",
                        "name": "page_limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "city_id",
                        "name": "city_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "lat",
                        "name": "lat",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "lng",
                        "name": "lng",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api_model.RecommendParkingLocationBaseResponseDto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/external/v1/{parking_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Show  the parking detail information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "external"
                ],
                "summary": "Parking detail information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api_model.DetailParkingResponseDto"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/:parking_id/parking-slot/:parking_slot_id/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "UpdateParkingSlotController",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "UpdateParkingSlotController",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "model",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_model.UpdateParkingSlotRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "parking_slot_id",
                        "name": "parking_slot_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/:parking_id/parking-slot/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Parking Slot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Add Parking Slot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "model",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_model.AddParkingSlotRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/:parking_id/sync-es": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sync Parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Sync Parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add Parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Add Parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "model",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_model.CreateParkingRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/approve-multi/{parking_ids}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Approved Multi Parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Approved Multi Parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "parking_ids",
                        "name": "parking_ids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/auth/login": {
            "post": {
                "description": "Login internal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login internal",
                "parameters": [
                    {
                        "description": "model",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.LoginAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/account.LoginAccountResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/generate-external-token": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get External JWT Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get External JWT Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "model",
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api_model.GenJWTTokenExternalRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/import": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Import Parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Import Parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/api_model.ImportParkingResponseDto"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/retrieve": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve paging list parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Retrieve paging list parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page_index",
                        "name": "page_index",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_limit",
                        "name": "page_limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api_model.RetrieveListParkingResponseDto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/sync-multi-es/{parking_ids}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Sync multi Parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Sync multi Parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "parking_ids",
                        "name": "parking_ids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/{parking_id}/approve": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Approved Parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Approved Parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/{parking_id}/close": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Close Parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Close Parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/{parking_id}/detail": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Detail Parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Detail Parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/{parking_id}/reopen": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reopen Parking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Reopen Parking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/internal/v1/{parking_id}/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update parking information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "internal"
                ],
                "summary": "Update parking information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "parking_id",
                        "name": "parking_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "model",
                        "name": "model",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api_model.UpdateParkingRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/public/v1/location/cities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get All City",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get All City",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api_model.ListCityResponseDto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/public/v1/location/cities/{city_id}/districts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get All District By CityId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get All District By CityId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "city_id",
                        "name": "city_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api_model.ListDistrictResponseDto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/public/v1/location/cities/{city_id}/districts/{district_id}/wards": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get All Ward By CityId and DistrictId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get All Ward By CityId and DistrictId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "city_id",
                        "name": "city_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "district_id",
                        "name": "district_Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api_model.BaseResponseAPIModel"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/api_model.ListWardResponseDto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.LoginAccountRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "account.LoginAccountResponse": {
            "type": "object",
            "properties": {
                "phone": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api_model.AddParkingSlotRequest": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number"
                },
                "total_slot": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "api_model.BaseResponseAPIModel": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "api_model.CreateParkingRequestDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer"
                },
                "close_at_hour": {
                    "type": "integer"
                },
                "close_at_minute": {
                    "type": "integer"
                },
                "district_id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "open_at_hour": {
                    "type": "integer"
                },
                "open_at_minute": {
                    "type": "integer"
                },
                "owner_name": {
                    "type": "string"
                },
                "owner_phone": {
                    "type": "string"
                },
                "parking_name": {
                    "type": "string"
                },
                "parking_phone": {
                    "type": "string"
                },
                "parking_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_model.CreateParkingTypesRequestDto"
                    }
                },
                "ward_id": {
                    "type": "integer"
                }
            }
        },
        "api_model.CreateParkingTypesRequestDto": {
            "type": "object",
            "properties": {
                "parking_type": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "total_slot": {
                    "type": "integer"
                }
            }
        },
        "api_model.DetailParkingResponseDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer"
                },
                "close_at_hour": {
                    "type": "integer"
                },
                "close_at_minute": {
                    "type": "integer"
                },
                "district_id": {
                    "type": "integer"
                },
                "full_address": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/api_model.PointLocationApiDto"
                },
                "open_at_hour": {
                    "type": "integer"
                },
                "open_at_minute": {
                    "type": "integer"
                },
                "owner_name": {
                    "type": "string"
                },
                "owner_phone": {
                    "type": "string"
                },
                "parking_id": {
                    "type": "string"
                },
                "parking_name": {
                    "type": "string"
                },
                "parking_phone": {
                    "type": "string"
                },
                "parking_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_model.ParkingTypesResponseDto"
                    }
                },
                "status": {
                    "type": "integer"
                },
                "status_display": {
                    "type": "string"
                },
                "ward_id": {
                    "type": "integer"
                }
            }
        },
        "api_model.DetailPlaceResponseDto": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                }
            }
        },
        "api_model.GenJWTTokenExternalRequestDto": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "api_model.GetCircleParkingLocationModelResponseDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                },
                "location": {
                    "$ref": "#/definitions/api_model.PointLocationApiDto"
                },
                "name": {
                    "type": "string"
                },
                "parking_id": {
                    "type": "integer"
                },
                "parking_phone": {
                    "type": "string"
                },
                "parking_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_model.ParkingTypesResponseDto"
                    }
                },
                "public_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "status_display": {
                    "type": "string"
                }
            }
        },
        "api_model.GetDirectionResponseDto": {
            "type": "object",
            "properties": {
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_model.PointLocationApiDto"
                    }
                }
            }
        },
        "api_model.GetPlaceHolderResponseDto": {
            "type": "object",
            "properties": {
                "place": {
                    "type": "string"
                },
                "place_id": {
                    "type": "string"
                }
            }
        },
        "api_model.ImportParkingResponseDto": {
            "type": "object",
            "properties": {
                "total_fail": {
                    "type": "integer"
                },
                "total_success": {
                    "type": "integer"
                }
            }
        },
        "api_model.ListCityResponseDto": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "integer"
                },
                "city_name": {
                    "type": "string"
                }
            }
        },
        "api_model.ListDistrictResponseDto": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "integer"
                },
                "city_name": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "district_name": {
                    "type": "string"
                }
            }
        },
        "api_model.ListWardResponseDto": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "integer"
                },
                "city_name": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "district_name": {
                    "type": "string"
                },
                "ward_id": {
                    "type": "integer"
                },
                "ward_name": {
                    "type": "string"
                }
            }
        },
        "api_model.ParkingTypesResponseDto": {
            "type": "object",
            "properties": {
                "current_slot": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "type": "integer"
                },
                "status_display": {
                    "type": "string"
                },
                "total_slot": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "type_display": {
                    "type": "string"
                }
            }
        },
        "api_model.PointLocationApiDto": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                }
            }
        },
        "api_model.RecommendParkingLocationBaseResponseDto": {
            "type": "object",
            "properties": {
                "parking": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api_model.RecommendParkingLocationResponseDto"
                    }
                }
            }
        },
        "api_model.RecommendParkingLocationResponseDto": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/definitions/api_model.PointLocationApiDto"
                },
                "parking_id": {
                    "type": "string"
                },
                "parking_name": {
                    "type": "string"
                }
            }
        },
        "api_model.RetrieveListParkingActionRolesDto": {
            "type": "object",
            "properties": {
                "can_approve": {
                    "type": "boolean"
                },
                "can_block": {
                    "type": "boolean"
                },
                "can_close": {
                    "type": "boolean"
                },
                "can_denied": {
                    "type": "boolean"
                },
                "can_remove": {
                    "type": "boolean"
                },
                "can_reopen": {
                    "type": "boolean"
                }
            }
        },
        "api_model.RetrieveListParkingResponseDto": {
            "type": "object",
            "properties": {
                "parking_name": {
                    "type": "string"
                },
                "parking_phone": {
                    "type": "string"
                },
                "public_id": {
                    "type": "string"
                },
                "roles": {
                    "$ref": "#/definitions/api_model.RetrieveListParkingActionRolesDto"
                },
                "status": {
                    "type": "integer"
                },
                "status_display": {
                    "type": "string"
                }
            }
        },
        "api_model.UpdateParkingRequestDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer"
                },
                "close_at": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "open_at": {
                    "type": "string"
                },
                "owner_name": {
                    "type": "string"
                },
                "owner_phone": {
                    "type": "string"
                },
                "parking_name": {
                    "type": "string"
                },
                "parking_phone": {
                    "type": "string"
                },
                "ward_id": {
                    "type": "integer"
                }
            }
        },
        "api_model.UpdateParkingSlotRequest": {
            "type": "object",
            "properties": {
                "parking_slot_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "total_slot": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
